
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  role: 'role',
  name: 'name',
  email: 'email',
  passwordHash: 'passwordHash',
  phone: 'phone',
  gender: 'gender',
  dob: 'dob',
  education: 'education',
  address: 'address',
  profilePicture: 'profilePicture',
  isVerified: 'isVerified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserProviderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  provider: 'provider',
  providerId: 'providerId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  createdAt: 'createdAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  location: 'location',
  description: 'description',
  website: 'website',
  logo: 'logo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  adminId: 'adminId'
};

exports.Prisma.JobScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  title: 'title',
  description: 'description',
  category: 'category',
  city: 'city',
  salaryMin: 'salaryMin',
  salaryMax: 'salaryMax',
  tags: 'tags',
  banner: 'banner',
  deadline: 'deadline',
  isPublished: 'isPublished',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ApplicationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  jobId: 'jobId',
  cvFile: 'cvFile',
  expectedSalary: 'expectedSalary',
  status: 'status',
  reviewNote: 'reviewNote',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SavedJobScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  jobId: 'jobId',
  createdAt: 'createdAt'
};

exports.Prisma.InterviewScalarFieldEnum = {
  id: 'id',
  applicationId: 'applicationId',
  scheduleDate: 'scheduleDate',
  locationOrLink: 'locationOrLink',
  notes: 'notes',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  reminderSentAt: 'reminderSentAt'
};

exports.Prisma.PreselectionTestScalarFieldEnum = {
  id: 'id',
  jobId: 'jobId',
  isActive: 'isActive',
  passingScore: 'passingScore',
  createdAt: 'createdAt'
};

exports.Prisma.PreselectionQuestionScalarFieldEnum = {
  id: 'id',
  testId: 'testId',
  question: 'question',
  options: 'options',
  answer: 'answer'
};

exports.Prisma.PreselectionResultScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  testId: 'testId',
  score: 'score',
  createdAt: 'createdAt'
};

exports.Prisma.ApplicantAnswerScalarFieldEnum = {
  id: 'id',
  resultId: 'resultId',
  questionId: 'questionId',
  selected: 'selected',
  isCorrect: 'isCorrect'
};

exports.Prisma.SkillAssessmentScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  createdBy: 'createdBy',
  createdAt: 'createdAt'
};

exports.Prisma.SkillQuestionScalarFieldEnum = {
  id: 'id',
  assessmentId: 'assessmentId',
  question: 'question',
  options: 'options',
  answer: 'answer'
};

exports.Prisma.SkillResultScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  assessmentId: 'assessmentId',
  score: 'score',
  isPassed: 'isPassed',
  certificateUrl: 'certificateUrl',
  certificateCode: 'certificateCode',
  startedAt: 'startedAt',
  finishedAt: 'finishedAt',
  createdAt: 'createdAt'
};

exports.Prisma.UserBadgeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  badgeName: 'badgeName',
  badgeIcon: 'badgeIcon',
  awardedAt: 'awardedAt'
};

exports.Prisma.GeneratedCVScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  fileUrl: 'fileUrl',
  templateUsed: 'templateUsed',
  additionalInfo: 'additionalInfo',
  createdAt: 'createdAt'
};

exports.Prisma.SubscriptionPlanScalarFieldEnum = {
  id: 'id',
  planName: 'planName',
  planPrice: 'planPrice',
  planDescription: 'planDescription'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  subscriptionPlanId: 'subscriptionPlanId',
  startDate: 'startDate',
  endDate: 'endDate',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  subscriptionId: 'subscriptionId',
  paymentMethod: 'paymentMethod',
  paymentProof: 'paymentProof',
  status: 'status',
  amount: 'amount',
  approvedAt: 'approvedAt',
  gatewayTransactionId: 'gatewayTransactionId',
  createdAt: 'createdAt',
  expiredAt: 'expiredAt'
};

exports.Prisma.EmploymentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  companyId: 'companyId',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt'
};

exports.Prisma.CompanyReviewScalarFieldEnum = {
  id: 'id',
  employmentId: 'employmentId',
  position: 'position',
  salaryEstimate: 'salaryEstimate',
  cultureRating: 'cultureRating',
  worklifeRating: 'worklifeRating',
  facilityRating: 'facilityRating',
  careerRating: 'careerRating',
  comment: 'comment',
  createdAt: 'createdAt'
};

exports.Prisma.JobShareScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  jobId: 'jobId',
  platform: 'platform',
  sharedUrl: 'sharedUrl',
  customMessage: 'customMessage',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  DEVELOPER: 'DEVELOPER'
};

exports.ApplicationStatus = exports.$Enums.ApplicationStatus = {
  SUBMITTED: 'SUBMITTED',
  IN_REVIEW: 'IN_REVIEW',
  INTERVIEW: 'INTERVIEW',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED'
};

exports.InterviewStatus = exports.$Enums.InterviewStatus = {
  SCHEDULED: 'SCHEDULED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  NO_SHOW: 'NO_SHOW'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  EXPIRED: 'EXPIRED'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  TRANSFER: 'TRANSFER',
  GATEWAY: 'GATEWAY'
};

exports.SharePlatform = exports.$Enums.SharePlatform = {
  LINKEDIN: 'LINKEDIN',
  FACEBOOK: 'FACEBOOK',
  TWITTER: 'TWITTER',
  WHATSAPP: 'WHATSAPP'
};

exports.ProviderType = exports.$Enums.ProviderType = {
  GOOGLE: 'GOOGLE',
  FACEBOOK: 'FACEBOOK'
};

exports.Prisma.ModelName = {
  User: 'User',
  UserProvider: 'UserProvider',
  Company: 'Company',
  Job: 'Job',
  Application: 'Application',
  SavedJob: 'SavedJob',
  Interview: 'Interview',
  PreselectionTest: 'PreselectionTest',
  PreselectionQuestion: 'PreselectionQuestion',
  PreselectionResult: 'PreselectionResult',
  ApplicantAnswer: 'ApplicantAnswer',
  SkillAssessment: 'SkillAssessment',
  SkillQuestion: 'SkillQuestion',
  SkillResult: 'SkillResult',
  UserBadge: 'UserBadge',
  GeneratedCV: 'GeneratedCV',
  SubscriptionPlan: 'SubscriptionPlan',
  Subscription: 'Subscription',
  Payment: 'Payment',
  Employment: 'Employment',
  CompanyReview: 'CompanyReview',
  JobShare: 'JobShare'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\DATASAID\\Said\\Purwadhika\\3 Code\\Finpro\\backend\\job-board-api\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\DATASAID\\Said\\Purwadhika\\3 Code\\Finpro\\backend\\job-board-api\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nenum UserRole {\n  USER\n  ADMIN\n  DEVELOPER\n}\n\nenum ApplicationStatus {\n  SUBMITTED\n  IN_REVIEW\n  INTERVIEW\n  ACCEPTED\n  REJECTED\n}\n\nenum InterviewStatus {\n  SCHEDULED\n  COMPLETED\n  CANCELLED\n  NO_SHOW\n}\n\nenum PaymentStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  EXPIRED\n}\n\nenum PaymentMethod {\n  TRANSFER\n  GATEWAY\n}\n\nenum SharePlatform {\n  LINKEDIN\n  FACEBOOK\n  TWITTER\n  WHATSAPP\n}\n\nenum ProviderType {\n  GOOGLE\n  FACEBOOK\n}\n\nmodel User {\n  id             Int       @id @default(autoincrement())\n  role           UserRole  @default(USER)\n  name           String\n  email          String    @unique\n  passwordHash   String?\n  phone          String?\n  gender         String?\n  dob            DateTime?\n  education      String?\n  address        String?\n  profilePicture String?\n  isVerified     Boolean   @default(false)\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n\n  providers           UserProvider[]\n  adminOf             Company?             @relation(\"CompanyAdmin\")\n  employments         Employment[]\n  applications        Application[]\n  preselectionResults PreselectionResult[]\n  skillResults        SkillResult[]\n  createdAssessments  SkillAssessment[]    @relation(\"SkillAssessmentCreator\")\n  userBadges          UserBadge[]\n  generatedCvs        GeneratedCV[]\n  subscriptions       Subscription[]\n  savedJobs           SavedJob[]\n  jobShares           JobShare[]\n}\n\nmodel UserProvider {\n  id           Int          @id @default(autoincrement())\n  userId       Int\n  provider     ProviderType\n  providerId   String\n  accessToken  String?\n  refreshToken String?\n  createdAt    DateTime     @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerId])\n  @@index([userId])\n}\n\nmodel Company {\n  id          Int          @id @default(autoincrement())\n  name        String\n  email       String?\n  phone       String?\n  location    String?\n  description String?\n  website     String?\n  logo        String?\n  createdAt   DateTime     @default(now())\n  updatedAt   DateTime     @updatedAt\n  adminId     Int?         @unique\n  admin       User?        @relation(\"CompanyAdmin\", fields: [adminId], references: [id], onDelete: SetNull)\n  jobs        Job[]\n  employments Employment[]\n}\n\nmodel Job {\n  id          Int       @id @default(autoincrement())\n  companyId   Int\n  title       String\n  description String\n  category    String\n  city        String\n  salaryMin   Int?\n  salaryMax   Int?\n  tags        String[]\n  banner      String?\n  deadline    DateTime?\n  isPublished Boolean   @default(false)\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  company           Company            @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  applications      Application[]\n  preselectionTests PreselectionTest[]\n  savedBy           SavedJob[]\n  shares            JobShare[]\n\n  @@index([companyId])\n}\n\nmodel Application {\n  id             Int               @id @default(autoincrement())\n  userId         Int\n  jobId          Int\n  cvFile         String\n  expectedSalary Int?\n  status         ApplicationStatus @default(SUBMITTED)\n  reviewNote     String?\n  createdAt      DateTime          @default(now())\n  updatedAt      DateTime          @updatedAt\n\n  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)\n  job        Job         @relation(fields: [jobId], references: [id], onDelete: Cascade)\n  interviews Interview[]\n\n  @@unique([userId, jobId])\n  @@index([jobId])\n}\n\nmodel SavedJob {\n  id        Int      @id @default(autoincrement())\n  userId    Int\n  jobId     Int\n  createdAt DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  job  Job  @relation(fields: [jobId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, jobId])\n}\n\nmodel Interview {\n  id             Int             @id @default(autoincrement())\n  applicationId  Int\n  scheduleDate   DateTime\n  locationOrLink String?\n  notes          String?\n  status         InterviewStatus @default(SCHEDULED)\n  createdAt      DateTime        @default(now())\n  updatedAt      DateTime        @updatedAt\n  reminderSentAt DateTime?\n\n  application Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)\n\n  @@index([applicationId])\n}\n\nmodel PreselectionTest {\n  id           Int      @id @default(autoincrement())\n  jobId        Int      @unique\n  isActive     Boolean  @default(true)\n  passingScore Int?\n  createdAt    DateTime @default(now())\n\n  job       Job                    @relation(fields: [jobId], references: [id], onDelete: Cascade)\n  questions PreselectionQuestion[]\n  results   PreselectionResult[]\n}\n\nmodel PreselectionQuestion {\n  id       Int    @id @default(autoincrement())\n  testId   Int\n  question String\n  options  Json\n  answer   String\n\n  test    PreselectionTest  @relation(fields: [testId], references: [id], onDelete: Cascade)\n  answers ApplicantAnswer[]\n\n  @@index([testId])\n}\n\nmodel PreselectionResult {\n  id        Int      @id @default(autoincrement())\n  userId    Int\n  testId    Int\n  score     Int\n  createdAt DateTime @default(now())\n\n  user    User              @relation(fields: [userId], references: [id], onDelete: Cascade)\n  test    PreselectionTest  @relation(fields: [testId], references: [id], onDelete: Cascade)\n  answers ApplicantAnswer[]\n\n  @@unique([userId, testId])\n  @@index([testId])\n}\n\nmodel ApplicantAnswer {\n  id         Int     @id @default(autoincrement())\n  resultId   Int\n  questionId Int\n  selected   String\n  isCorrect  Boolean\n\n  result   PreselectionResult   @relation(fields: [resultId], references: [id], onDelete: Cascade)\n  question PreselectionQuestion @relation(fields: [questionId], references: [id], onDelete: Cascade)\n\n  @@unique([resultId, questionId])\n  @@index([questionId])\n}\n\nmodel SkillAssessment {\n  id          Int      @id @default(autoincrement())\n  title       String\n  description String?\n  createdBy   Int\n  createdAt   DateTime @default(now())\n\n  creator   User            @relation(\"SkillAssessmentCreator\", fields: [createdBy], references: [id], onDelete: Restrict)\n  questions SkillQuestion[]\n  results   SkillResult[]\n}\n\nmodel SkillQuestion {\n  id           Int    @id @default(autoincrement())\n  assessmentId Int\n  question     String\n  options      Json\n  answer       String\n\n  assessment SkillAssessment @relation(fields: [assessmentId], references: [id], onDelete: Cascade)\n\n  @@index([assessmentId])\n}\n\nmodel SkillResult {\n  id              Int       @id @default(autoincrement())\n  userId          Int\n  assessmentId    Int\n  score           Int\n  isPassed        Boolean   @default(false)\n  certificateUrl  String?\n  certificateCode String?\n  startedAt       DateTime?\n  finishedAt      DateTime?\n  createdAt       DateTime  @default(now())\n\n  user       User            @relation(fields: [userId], references: [id], onDelete: Cascade)\n  assessment SkillAssessment @relation(fields: [assessmentId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, assessmentId])\n  @@index([assessmentId])\n}\n\nmodel UserBadge {\n  id        Int      @id @default(autoincrement())\n  userId    Int\n  badgeName String\n  badgeIcon String?\n  awardedAt DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel GeneratedCV {\n  id             Int      @id @default(autoincrement())\n  userId         Int\n  fileUrl        String\n  templateUsed   String\n  additionalInfo Json?\n  createdAt      DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel SubscriptionPlan {\n  id              Int     @id @default(autoincrement())\n  planName        String\n  planPrice       Decimal @db.Decimal(12, 2)\n  planDescription String?\n\n  subscriptions Subscription[]\n}\n\nmodel Subscription {\n  id                 Int      @id @default(autoincrement())\n  userId             Int\n  subscriptionPlanId Int\n  startDate          DateTime\n  endDate            DateTime\n  isActive           Boolean  @default(false)\n  createdAt          DateTime @default(now())\n\n  user     User             @relation(fields: [userId], references: [id], onDelete: Cascade)\n  plan     SubscriptionPlan @relation(fields: [subscriptionPlanId], references: [id], onDelete: Restrict)\n  payments Payment[]\n\n  @@index([userId])\n  @@index([subscriptionPlanId])\n}\n\nmodel Payment {\n  id                   Int           @id @default(autoincrement())\n  subscriptionId       Int\n  paymentMethod        PaymentMethod\n  paymentProof         String?\n  status               PaymentStatus @default(PENDING)\n  amount               Decimal       @db.Decimal(12, 2)\n  approvedAt           DateTime?\n  gatewayTransactionId String?\n  createdAt            DateTime      @default(now())\n  expiredAt            DateTime?\n\n  subscription Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)\n\n  @@index([subscriptionId])\n}\n\nmodel Employment {\n  id        Int       @id @default(autoincrement())\n  userId    Int\n  companyId Int?\n  startDate DateTime?\n  endDate   DateTime?\n  createdAt DateTime  @default(now())\n\n  user    User            @relation(fields: [userId], references: [id], onDelete: Cascade)\n  company Company?        @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  reviews CompanyReview[]\n\n  @@unique([userId, companyId])\n}\n\nmodel CompanyReview {\n  id             Int      @id @default(autoincrement())\n  employmentId   Int      @unique\n  position       String\n  salaryEstimate Int?\n  cultureRating  Int\n  worklifeRating Int\n  facilityRating Int\n  careerRating   Int\n  comment        String?\n  createdAt      DateTime @default(now())\n\n  employment Employment @relation(fields: [employmentId], references: [id], onDelete: Cascade)\n}\n\nmodel JobShare {\n  id            Int           @id @default(autoincrement())\n  userId        Int\n  jobId         Int\n  platform      SharePlatform\n  sharedUrl     String?\n  customMessage String?\n  createdAt     DateTime      @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  job  Job  @relation(fields: [jobId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([jobId])\n}\n",
  "inlineSchemaHash": "74e658ad5d4daf5581162d8282c6ca1668ce8ca60d857b1883f5d140f1ed759b",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dob\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"education\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePicture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"providers\",\"kind\":\"object\",\"type\":\"UserProvider\",\"relationName\":\"UserToUserProvider\"},{\"name\":\"adminOf\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyAdmin\"},{\"name\":\"employments\",\"kind\":\"object\",\"type\":\"Employment\",\"relationName\":\"EmploymentToUser\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToUser\"},{\"name\":\"preselectionResults\",\"kind\":\"object\",\"type\":\"PreselectionResult\",\"relationName\":\"PreselectionResultToUser\"},{\"name\":\"skillResults\",\"kind\":\"object\",\"type\":\"SkillResult\",\"relationName\":\"SkillResultToUser\"},{\"name\":\"createdAssessments\",\"kind\":\"object\",\"type\":\"SkillAssessment\",\"relationName\":\"SkillAssessmentCreator\"},{\"name\":\"userBadges\",\"kind\":\"object\",\"type\":\"UserBadge\",\"relationName\":\"UserToUserBadge\"},{\"name\":\"generatedCvs\",\"kind\":\"object\",\"type\":\"GeneratedCV\",\"relationName\":\"GeneratedCVToUser\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToUser\"},{\"name\":\"savedJobs\",\"kind\":\"object\",\"type\":\"SavedJob\",\"relationName\":\"SavedJobToUser\"},{\"name\":\"jobShares\",\"kind\":\"object\",\"type\":\"JobShare\",\"relationName\":\"JobShareToUser\"}],\"dbName\":null},\"UserProvider\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"ProviderType\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserProvider\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyAdmin\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"CompanyToJob\"},{\"name\":\"employments\",\"kind\":\"object\",\"type\":\"Employment\",\"relationName\":\"CompanyToEmployment\"}],\"dbName\":null},\"Job\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salaryMin\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"salaryMax\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banner\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToJob\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToJob\"},{\"name\":\"preselectionTests\",\"kind\":\"object\",\"type\":\"PreselectionTest\",\"relationName\":\"JobToPreselectionTest\"},{\"name\":\"savedBy\",\"kind\":\"object\",\"type\":\"SavedJob\",\"relationName\":\"JobToSavedJob\"},{\"name\":\"shares\",\"kind\":\"object\",\"type\":\"JobShare\",\"relationName\":\"JobToJobShare\"}],\"dbName\":null},\"Application\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cvFile\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expectedSalary\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApplicationStatus\"},{\"name\":\"reviewNote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApplicationToUser\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"ApplicationToJob\"},{\"name\":\"interviews\",\"kind\":\"object\",\"type\":\"Interview\",\"relationName\":\"ApplicationToInterview\"}],\"dbName\":null},\"SavedJob\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SavedJobToUser\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToSavedJob\"}],\"dbName\":null},\"Interview\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"scheduleDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"locationOrLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InterviewStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reminderSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToInterview\"}],\"dbName\":null},\"PreselectionTest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"passingScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToPreselectionTest\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"PreselectionQuestion\",\"relationName\":\"PreselectionQuestionToPreselectionTest\"},{\"name\":\"results\",\"kind\":\"object\",\"type\":\"PreselectionResult\",\"relationName\":\"PreselectionResultToPreselectionTest\"}],\"dbName\":null},\"PreselectionQuestion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"testId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"question\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"options\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"answer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"test\",\"kind\":\"object\",\"type\":\"PreselectionTest\",\"relationName\":\"PreselectionQuestionToPreselectionTest\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"ApplicantAnswer\",\"relationName\":\"ApplicantAnswerToPreselectionQuestion\"}],\"dbName\":null},\"PreselectionResult\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"testId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PreselectionResultToUser\"},{\"name\":\"test\",\"kind\":\"object\",\"type\":\"PreselectionTest\",\"relationName\":\"PreselectionResultToPreselectionTest\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"ApplicantAnswer\",\"relationName\":\"ApplicantAnswerToPreselectionResult\"}],\"dbName\":null},\"ApplicantAnswer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"resultId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"selected\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isCorrect\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"result\",\"kind\":\"object\",\"type\":\"PreselectionResult\",\"relationName\":\"ApplicantAnswerToPreselectionResult\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"PreselectionQuestion\",\"relationName\":\"ApplicantAnswerToPreselectionQuestion\"}],\"dbName\":null},\"SkillAssessment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SkillAssessmentCreator\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"SkillQuestion\",\"relationName\":\"SkillAssessmentToSkillQuestion\"},{\"name\":\"results\",\"kind\":\"object\",\"type\":\"SkillResult\",\"relationName\":\"SkillAssessmentToSkillResult\"}],\"dbName\":null},\"SkillQuestion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assessmentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"question\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"options\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"answer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assessment\",\"kind\":\"object\",\"type\":\"SkillAssessment\",\"relationName\":\"SkillAssessmentToSkillQuestion\"}],\"dbName\":null},\"SkillResult\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assessmentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isPassed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"certificateUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certificateCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"finishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SkillResultToUser\"},{\"name\":\"assessment\",\"kind\":\"object\",\"type\":\"SkillAssessment\",\"relationName\":\"SkillAssessmentToSkillResult\"}],\"dbName\":null},\"UserBadge\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"badgeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"badgeIcon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"awardedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserBadge\"}],\"dbName\":null},\"GeneratedCV\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"templateUsed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"additionalInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GeneratedCVToUser\"}],\"dbName\":null},\"SubscriptionPlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"planName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"planDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToSubscriptionPlan\"}],\"dbName\":null},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscriptionPlanId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SubscriptionToUser\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"SubscriptionPlan\",\"relationName\":\"SubscriptionToSubscriptionPlan\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToSubscription\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"paymentProof\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gatewayTransactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"PaymentToSubscription\"}],\"dbName\":null},\"Employment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmploymentToUser\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToEmployment\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"CompanyReview\",\"relationName\":\"CompanyReviewToEmployment\"}],\"dbName\":null},\"CompanyReview\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employmentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salaryEstimate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cultureRating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"worklifeRating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"facilityRating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"careerRating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"employment\",\"kind\":\"object\",\"type\":\"Employment\",\"relationName\":\"CompanyReviewToEmployment\"}],\"dbName\":null},\"JobShare\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"platform\",\"kind\":\"enum\",\"type\":\"SharePlatform\"},{\"name\":\"sharedUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"JobShareToUser\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToJobShare\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

