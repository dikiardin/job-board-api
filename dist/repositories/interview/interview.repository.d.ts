import { InterviewStatus, Prisma } from "../../generated/prisma";
export declare class InterviewRepository {
    static createMany(interviews: Array<{
        applicationId: number;
        scheduleDate: Date;
        locationOrLink?: string | null;
        notes?: string | null;
    }>): Promise<any[]>;
    static createOne(data: {
        applicationId: number;
        scheduleDate: Date;
        locationOrLink?: string | null;
        notes?: string | null;
    }): Promise<{
        application: {
            user: {
                role: import("../../generated/prisma").$Enums.UserRole;
                email: string;
                passwordHash: string | null;
                name: string | null;
                phone: string | null;
                gender: string | null;
                dob: Date | null;
                education: string | null;
                address: string | null;
                city: string | null;
                profilePicture: string | null;
                emailVerifiedAt: Date | null;
                verificationToken: string | null;
                verificationTokenExpiresAt: Date | null;
                passwordResetToken: string | null;
                passwordResetExpiresAt: Date | null;
                emailChangeToken: string | null;
                emailChangeNewEmail: string | null;
                emailChangeExpiresAt: Date | null;
                lastLoginAt: Date | null;
                isActive: boolean;
                createdAt: Date;
                updatedAt: Date;
                id: number;
            };
            job: {
                company: {
                    owner: {
                        role: import("../../generated/prisma").$Enums.UserRole;
                        email: string;
                        passwordHash: string | null;
                        name: string | null;
                        phone: string | null;
                        gender: string | null;
                        dob: Date | null;
                        education: string | null;
                        address: string | null;
                        city: string | null;
                        profilePicture: string | null;
                        emailVerifiedAt: Date | null;
                        verificationToken: string | null;
                        verificationTokenExpiresAt: Date | null;
                        passwordResetToken: string | null;
                        passwordResetExpiresAt: Date | null;
                        emailChangeToken: string | null;
                        emailChangeNewEmail: string | null;
                        emailChangeExpiresAt: Date | null;
                        lastLoginAt: Date | null;
                        isActive: boolean;
                        createdAt: Date;
                        updatedAt: Date;
                        id: number;
                    } | null;
                } & {
                    email: string;
                    name: string;
                    phone: string | null;
                    address: string | null;
                    createdAt: Date;
                    updatedAt: Date;
                    id: number;
                    slug: string;
                    description: string | null;
                    logoUrl: string | null;
                    bannerUrl: string | null;
                    website: string | null;
                    locationCity: string | null;
                    locationProvince: string | null;
                    locationCountry: string | null;
                    socials: Prisma.JsonValue | null;
                    ownerAdminId: number | null;
                };
            } & {
                city: string;
                createdAt: Date;
                updatedAt: Date;
                id: number;
                companyId: number;
                slug: string;
                description: string;
                bannerUrl: string | null;
                title: string;
                category: string;
                employmentType: string | null;
                experienceLevel: string | null;
                province: string | null;
                salaryMin: number | null;
                salaryMax: number | null;
                salaryCurrency: string | null;
                tags: string[];
                applyDeadline: Date | null;
                isPublished: boolean;
                publishedAt: Date | null;
            };
        } & {
            createdAt: Date;
            updatedAt: Date;
            id: number;
            userId: number;
            status: import("../../generated/prisma").$Enums.ApplicationStatus;
            jobId: number;
            cvUrl: string;
            cvFileName: string | null;
            cvFileSize: number | null;
            expectedSalary: number | null;
            expectedSalaryCurrency: string | null;
            reviewNote: string | null;
            reviewUpdatedAt: Date | null;
            referralSource: string | null;
            isPriority: boolean;
        };
    } & {
        createdAt: Date;
        updatedAt: Date;
        id: number;
        status: import("../../generated/prisma").$Enums.InterviewStatus;
        notes: string | null;
        applicationId: number;
        createdById: number | null;
        startsAt: Date;
        endsAt: Date | null;
        locationOrLink: string | null;
        reminderSentAt: Date | null;
        updatedById: number | null;
    }>;
    static updateOne(id: number, data: Partial<{
        scheduleDate: Date;
        locationOrLink: string | null;
        notes: string | null;
        status: InterviewStatus;
    }>): Promise<{
        application: {
            user: {
                role: import("../../generated/prisma").$Enums.UserRole;
                email: string;
                passwordHash: string | null;
                name: string | null;
                phone: string | null;
                gender: string | null;
                dob: Date | null;
                education: string | null;
                address: string | null;
                city: string | null;
                profilePicture: string | null;
                emailVerifiedAt: Date | null;
                verificationToken: string | null;
                verificationTokenExpiresAt: Date | null;
                passwordResetToken: string | null;
                passwordResetExpiresAt: Date | null;
                emailChangeToken: string | null;
                emailChangeNewEmail: string | null;
                emailChangeExpiresAt: Date | null;
                lastLoginAt: Date | null;
                isActive: boolean;
                createdAt: Date;
                updatedAt: Date;
                id: number;
            };
            job: {
                company: {
                    owner: {
                        role: import("../../generated/prisma").$Enums.UserRole;
                        email: string;
                        passwordHash: string | null;
                        name: string | null;
                        phone: string | null;
                        gender: string | null;
                        dob: Date | null;
                        education: string | null;
                        address: string | null;
                        city: string | null;
                        profilePicture: string | null;
                        emailVerifiedAt: Date | null;
                        verificationToken: string | null;
                        verificationTokenExpiresAt: Date | null;
                        passwordResetToken: string | null;
                        passwordResetExpiresAt: Date | null;
                        emailChangeToken: string | null;
                        emailChangeNewEmail: string | null;
                        emailChangeExpiresAt: Date | null;
                        lastLoginAt: Date | null;
                        isActive: boolean;
                        createdAt: Date;
                        updatedAt: Date;
                        id: number;
                    } | null;
                } & {
                    email: string;
                    name: string;
                    phone: string | null;
                    address: string | null;
                    createdAt: Date;
                    updatedAt: Date;
                    id: number;
                    slug: string;
                    description: string | null;
                    logoUrl: string | null;
                    bannerUrl: string | null;
                    website: string | null;
                    locationCity: string | null;
                    locationProvince: string | null;
                    locationCountry: string | null;
                    socials: Prisma.JsonValue | null;
                    ownerAdminId: number | null;
                };
            } & {
                city: string;
                createdAt: Date;
                updatedAt: Date;
                id: number;
                companyId: number;
                slug: string;
                description: string;
                bannerUrl: string | null;
                title: string;
                category: string;
                employmentType: string | null;
                experienceLevel: string | null;
                province: string | null;
                salaryMin: number | null;
                salaryMax: number | null;
                salaryCurrency: string | null;
                tags: string[];
                applyDeadline: Date | null;
                isPublished: boolean;
                publishedAt: Date | null;
            };
        } & {
            createdAt: Date;
            updatedAt: Date;
            id: number;
            userId: number;
            status: import("../../generated/prisma").$Enums.ApplicationStatus;
            jobId: number;
            cvUrl: string;
            cvFileName: string | null;
            cvFileSize: number | null;
            expectedSalary: number | null;
            expectedSalaryCurrency: string | null;
            reviewNote: string | null;
            reviewUpdatedAt: Date | null;
            referralSource: string | null;
            isPriority: boolean;
        };
    } & {
        createdAt: Date;
        updatedAt: Date;
        id: number;
        status: import("../../generated/prisma").$Enums.InterviewStatus;
        notes: string | null;
        applicationId: number;
        createdById: number | null;
        startsAt: Date;
        endsAt: Date | null;
        locationOrLink: string | null;
        reminderSentAt: Date | null;
        updatedById: number | null;
    }>;
    static deleteOne(id: number): Promise<{
        createdAt: Date;
        updatedAt: Date;
        id: number;
        status: import("../../generated/prisma").$Enums.InterviewStatus;
        notes: string | null;
        applicationId: number;
        createdById: number | null;
        startsAt: Date;
        endsAt: Date | null;
        locationOrLink: string | null;
        reminderSentAt: Date | null;
        updatedById: number | null;
    }>;
    static getById(id: number): Promise<({
        application: {
            user: {
                role: import("../../generated/prisma").$Enums.UserRole;
                email: string;
                passwordHash: string | null;
                name: string | null;
                phone: string | null;
                gender: string | null;
                dob: Date | null;
                education: string | null;
                address: string | null;
                city: string | null;
                profilePicture: string | null;
                emailVerifiedAt: Date | null;
                verificationToken: string | null;
                verificationTokenExpiresAt: Date | null;
                passwordResetToken: string | null;
                passwordResetExpiresAt: Date | null;
                emailChangeToken: string | null;
                emailChangeNewEmail: string | null;
                emailChangeExpiresAt: Date | null;
                lastLoginAt: Date | null;
                isActive: boolean;
                createdAt: Date;
                updatedAt: Date;
                id: number;
            };
            job: {
                company: {
                    owner: {
                        role: import("../../generated/prisma").$Enums.UserRole;
                        email: string;
                        passwordHash: string | null;
                        name: string | null;
                        phone: string | null;
                        gender: string | null;
                        dob: Date | null;
                        education: string | null;
                        address: string | null;
                        city: string | null;
                        profilePicture: string | null;
                        emailVerifiedAt: Date | null;
                        verificationToken: string | null;
                        verificationTokenExpiresAt: Date | null;
                        passwordResetToken: string | null;
                        passwordResetExpiresAt: Date | null;
                        emailChangeToken: string | null;
                        emailChangeNewEmail: string | null;
                        emailChangeExpiresAt: Date | null;
                        lastLoginAt: Date | null;
                        isActive: boolean;
                        createdAt: Date;
                        updatedAt: Date;
                        id: number;
                    } | null;
                } & {
                    email: string;
                    name: string;
                    phone: string | null;
                    address: string | null;
                    createdAt: Date;
                    updatedAt: Date;
                    id: number;
                    slug: string;
                    description: string | null;
                    logoUrl: string | null;
                    bannerUrl: string | null;
                    website: string | null;
                    locationCity: string | null;
                    locationProvince: string | null;
                    locationCountry: string | null;
                    socials: Prisma.JsonValue | null;
                    ownerAdminId: number | null;
                };
            } & {
                city: string;
                createdAt: Date;
                updatedAt: Date;
                id: number;
                companyId: number;
                slug: string;
                description: string;
                bannerUrl: string | null;
                title: string;
                category: string;
                employmentType: string | null;
                experienceLevel: string | null;
                province: string | null;
                salaryMin: number | null;
                salaryMax: number | null;
                salaryCurrency: string | null;
                tags: string[];
                applyDeadline: Date | null;
                isPublished: boolean;
                publishedAt: Date | null;
            };
        } & {
            createdAt: Date;
            updatedAt: Date;
            id: number;
            userId: number;
            status: import("../../generated/prisma").$Enums.ApplicationStatus;
            jobId: number;
            cvUrl: string;
            cvFileName: string | null;
            cvFileSize: number | null;
            expectedSalary: number | null;
            expectedSalaryCurrency: string | null;
            reviewNote: string | null;
            reviewUpdatedAt: Date | null;
            referralSource: string | null;
            isPriority: boolean;
        };
    } & {
        createdAt: Date;
        updatedAt: Date;
        id: number;
        status: import("../../generated/prisma").$Enums.InterviewStatus;
        notes: string | null;
        applicationId: number;
        createdById: number | null;
        startsAt: Date;
        endsAt: Date | null;
        locationOrLink: string | null;
        reminderSentAt: Date | null;
        updatedById: number | null;
    }) | null>;
    static list(params: {
        companyId: string | number;
        jobId?: string | number;
        applicantId?: number;
        status?: InterviewStatus;
        dateFrom?: Date;
        dateTo?: Date;
        limit?: number;
        offset?: number;
    }): Promise<{
        items: ({
            application: {
                user: {
                    role: import("../../generated/prisma").$Enums.UserRole;
                    email: string;
                    passwordHash: string | null;
                    name: string | null;
                    phone: string | null;
                    gender: string | null;
                    dob: Date | null;
                    education: string | null;
                    address: string | null;
                    city: string | null;
                    profilePicture: string | null;
                    emailVerifiedAt: Date | null;
                    verificationToken: string | null;
                    verificationTokenExpiresAt: Date | null;
                    passwordResetToken: string | null;
                    passwordResetExpiresAt: Date | null;
                    emailChangeToken: string | null;
                    emailChangeNewEmail: string | null;
                    emailChangeExpiresAt: Date | null;
                    lastLoginAt: Date | null;
                    isActive: boolean;
                    createdAt: Date;
                    updatedAt: Date;
                    id: number;
                };
                job: {
                    company: {
                        owner: {
                            role: import("../../generated/prisma").$Enums.UserRole;
                            email: string;
                            passwordHash: string | null;
                            name: string | null;
                            phone: string | null;
                            gender: string | null;
                            dob: Date | null;
                            education: string | null;
                            address: string | null;
                            city: string | null;
                            profilePicture: string | null;
                            emailVerifiedAt: Date | null;
                            verificationToken: string | null;
                            verificationTokenExpiresAt: Date | null;
                            passwordResetToken: string | null;
                            passwordResetExpiresAt: Date | null;
                            emailChangeToken: string | null;
                            emailChangeNewEmail: string | null;
                            emailChangeExpiresAt: Date | null;
                            lastLoginAt: Date | null;
                            isActive: boolean;
                            createdAt: Date;
                            updatedAt: Date;
                            id: number;
                        } | null;
                    } & {
                        email: string;
                        name: string;
                        phone: string | null;
                        address: string | null;
                        createdAt: Date;
                        updatedAt: Date;
                        id: number;
                        slug: string;
                        description: string | null;
                        logoUrl: string | null;
                        bannerUrl: string | null;
                        website: string | null;
                        locationCity: string | null;
                        locationProvince: string | null;
                        locationCountry: string | null;
                        socials: Prisma.JsonValue | null;
                        ownerAdminId: number | null;
                    };
                } & {
                    city: string;
                    createdAt: Date;
                    updatedAt: Date;
                    id: number;
                    companyId: number;
                    slug: string;
                    description: string;
                    bannerUrl: string | null;
                    title: string;
                    category: string;
                    employmentType: string | null;
                    experienceLevel: string | null;
                    province: string | null;
                    salaryMin: number | null;
                    salaryMax: number | null;
                    salaryCurrency: string | null;
                    tags: string[];
                    applyDeadline: Date | null;
                    isPublished: boolean;
                    publishedAt: Date | null;
                };
            } & {
                createdAt: Date;
                updatedAt: Date;
                id: number;
                userId: number;
                status: import("../../generated/prisma").$Enums.ApplicationStatus;
                jobId: number;
                cvUrl: string;
                cvFileName: string | null;
                cvFileSize: number | null;
                expectedSalary: number | null;
                expectedSalaryCurrency: string | null;
                reviewNote: string | null;
                reviewUpdatedAt: Date | null;
                referralSource: string | null;
                isPriority: boolean;
            };
        } & {
            createdAt: Date;
            updatedAt: Date;
            id: number;
            status: import("../../generated/prisma").$Enums.InterviewStatus;
            notes: string | null;
            applicationId: number;
            createdById: number | null;
            startsAt: Date;
            endsAt: Date | null;
            locationOrLink: string | null;
            reminderSentAt: Date | null;
            updatedById: number | null;
        })[];
        total: number;
        limit: number;
        offset: number;
    }>;
    static findConflicts(applicationId: number, start: Date, end: Date): Promise<{
        createdAt: Date;
        updatedAt: Date;
        id: number;
        status: import("../../generated/prisma").$Enums.InterviewStatus;
        notes: string | null;
        applicationId: number;
        createdById: number | null;
        startsAt: Date;
        endsAt: Date | null;
        locationOrLink: string | null;
        reminderSentAt: Date | null;
        updatedById: number | null;
    } | null>;
    static getDueReminders(windowStart: Date, windowEnd: Date): Promise<({
        application: {
            user: {
                role: import("../../generated/prisma").$Enums.UserRole;
                email: string;
                passwordHash: string | null;
                name: string | null;
                phone: string | null;
                gender: string | null;
                dob: Date | null;
                education: string | null;
                address: string | null;
                city: string | null;
                profilePicture: string | null;
                emailVerifiedAt: Date | null;
                verificationToken: string | null;
                verificationTokenExpiresAt: Date | null;
                passwordResetToken: string | null;
                passwordResetExpiresAt: Date | null;
                emailChangeToken: string | null;
                emailChangeNewEmail: string | null;
                emailChangeExpiresAt: Date | null;
                lastLoginAt: Date | null;
                isActive: boolean;
                createdAt: Date;
                updatedAt: Date;
                id: number;
            };
            job: {
                company: {
                    owner: {
                        role: import("../../generated/prisma").$Enums.UserRole;
                        email: string;
                        passwordHash: string | null;
                        name: string | null;
                        phone: string | null;
                        gender: string | null;
                        dob: Date | null;
                        education: string | null;
                        address: string | null;
                        city: string | null;
                        profilePicture: string | null;
                        emailVerifiedAt: Date | null;
                        verificationToken: string | null;
                        verificationTokenExpiresAt: Date | null;
                        passwordResetToken: string | null;
                        passwordResetExpiresAt: Date | null;
                        emailChangeToken: string | null;
                        emailChangeNewEmail: string | null;
                        emailChangeExpiresAt: Date | null;
                        lastLoginAt: Date | null;
                        isActive: boolean;
                        createdAt: Date;
                        updatedAt: Date;
                        id: number;
                    } | null;
                } & {
                    email: string;
                    name: string;
                    phone: string | null;
                    address: string | null;
                    createdAt: Date;
                    updatedAt: Date;
                    id: number;
                    slug: string;
                    description: string | null;
                    logoUrl: string | null;
                    bannerUrl: string | null;
                    website: string | null;
                    locationCity: string | null;
                    locationProvince: string | null;
                    locationCountry: string | null;
                    socials: Prisma.JsonValue | null;
                    ownerAdminId: number | null;
                };
            } & {
                city: string;
                createdAt: Date;
                updatedAt: Date;
                id: number;
                companyId: number;
                slug: string;
                description: string;
                bannerUrl: string | null;
                title: string;
                category: string;
                employmentType: string | null;
                experienceLevel: string | null;
                province: string | null;
                salaryMin: number | null;
                salaryMax: number | null;
                salaryCurrency: string | null;
                tags: string[];
                applyDeadline: Date | null;
                isPublished: boolean;
                publishedAt: Date | null;
            };
        } & {
            createdAt: Date;
            updatedAt: Date;
            id: number;
            userId: number;
            status: import("../../generated/prisma").$Enums.ApplicationStatus;
            jobId: number;
            cvUrl: string;
            cvFileName: string | null;
            cvFileSize: number | null;
            expectedSalary: number | null;
            expectedSalaryCurrency: string | null;
            reviewNote: string | null;
            reviewUpdatedAt: Date | null;
            referralSource: string | null;
            isPriority: boolean;
        };
    } & {
        createdAt: Date;
        updatedAt: Date;
        id: number;
        status: import("../../generated/prisma").$Enums.InterviewStatus;
        notes: string | null;
        applicationId: number;
        createdById: number | null;
        startsAt: Date;
        endsAt: Date | null;
        locationOrLink: string | null;
        reminderSentAt: Date | null;
        updatedById: number | null;
    })[]>;
    static markReminderSent(id: number): Promise<{
        createdAt: Date;
        updatedAt: Date;
        id: number;
        status: import("../../generated/prisma").$Enums.InterviewStatus;
        notes: string | null;
        applicationId: number;
        createdById: number | null;
        startsAt: Date;
        endsAt: Date | null;
        locationOrLink: string | null;
        reminderSentAt: Date | null;
        updatedById: number | null;
    }>;
}
//# sourceMappingURL=interview.repository.d.ts.map